coverity001 <Low> :testcasesupport/io.c:15: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:13:
    1. path: Condition "line != NULL", taking true branch.
    /opt/project/baseline_testcase/testcasesupport/io.c:15:
    2. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity002 <Low> :testcasesupport/io.c:23: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:21:
    1. path: Condition "line != NULL", taking true branch.
    /opt/project/baseline_testcase/testcasesupport/io.c:23:
    2. check_return: Calling "wprintf" without checking return value (as is done elsewhere 0 out of 1 times).

coverity003 <Low> :testcasesupport/io.c:29: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:29:
    1. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity004 <Low> :testcasesupport/io.c:34: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:34:
    1. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity005 <Low> :testcasesupport/io.c:39: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:39:
    1. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity006 <Low> :testcasesupport/io.c:44: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:44:
    1. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity007 <Low> :testcasesupport/io.c:49: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:49:
    1. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity008 <Low> :testcasesupport/io.c:54: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:54:
    1. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity009 <Low> :testcasesupport/io.c:59: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:59:
    1. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity010 <Low> :testcasesupport/io.c:69: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:69:
    1. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity011 <Low> :testcasesupport/io.c:74: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:74:
    1. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity012 <Low> :testcasesupport/io.c:79: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:79:
    1. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity013 <Low> :testcasesupport/io.c:84: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:84:
    1. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity014 <Low> :testcasesupport/io.c:89: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:89:
    1. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity015 <Low> :testcasesupport/io.c:97: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:95:
    1. path: Condition "i < numBytes", taking true branch.
    /opt/project/baseline_testcase/testcasesupport/io.c:97:
    2. check_return: Calling "printf" without checking return value (as is done elsewhere 0 out of 14 times).

coverity016 <Low> :testcasesupport/io.c:99: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:95:
    1. path: Condition "i < numBytes", taking true branch.
    /opt/project/baseline_testcase/testcasesupport/io.c:98:
    2. path: Jumping back to the beginning of the loop.
    /opt/project/baseline_testcase/testcasesupport/io.c:95:
    3. path: Condition "i < numBytes", taking true branch.
    /opt/project/baseline_testcase/testcasesupport/io.c:98:
    4. path: Jumping back to the beginning of the loop.
    /opt/project/baseline_testcase/testcasesupport/io.c:95:
    5. path: Condition "i < numBytes", taking false branch.
    /opt/project/baseline_testcase/testcasesupport/io.c:99:
    6. check_return: Calling "puts" without checking return value (as is done elsewhere 0 out of 1 times).

coverity017 <Low> :testcasesupport/io.c:116: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:113:
    1. path: Condition "numWritten < numBytes", taking true branch.
    /opt/project/baseline_testcase/testcasesupport/io.c:113:
    2. path: Condition "*__ctype_b_loc()[(int)hex[2 * numWritten]] & 4096 /* (unsigned short)_ISxdigit */", taking true branch.
    /opt/project/baseline_testcase/testcasesupport/io.c:113:
    3. path: Condition "*__ctype_b_loc()[(int)hex[2 * numWritten + 1]] & 4096 /* (unsigned short)_ISxdigit */", taking true branch.
    /opt/project/baseline_testcase/testcasesupport/io.c:116:
    4. check_return: Calling "sscanf" without checking return value (as is done elsewhere 0 out of 1 times).

coverity018 <Low> :testcasesupport/io.c:138: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/io.c:135:
    1. path: Condition "numWritten < numBytes", taking true branch.
    /opt/project/baseline_testcase/testcasesupport/io.c:135:
    2. path: Condition "iswxdigit(hex[2 * numWritten])", taking true branch.
    /opt/project/baseline_testcase/testcasesupport/io.c:135:
    3. path: Condition "iswxdigit(hex[2 * numWritten + 1])", taking true branch.
    /opt/project/baseline_testcase/testcasesupport/io.c:138:
    4. check_return: Calling "swscanf" without checking return value (as is done elsewhere 0 out of 1 times).

coverity019 <Low> :testcasesupport/io.c:160: DC.WEAK_CRYPTO
    /opt/project/baseline_testcase/testcasesupport/io.c:160:
    dont_call: "rand" should not be used for security-related applications, because linear congruential algorithms are too easy to break.
    /opt/project/baseline_testcase/testcasesupport/io.c:160:
    remediation: Use a compliant random number generator, such as "/dev/random" or "/dev/urandom" on Unix-like systems, and CNG (Cryptography API: Next Generation) on Windows.

coverity020 <Low> :testcasesupport/std_thread.c:184: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/std_thread.c:184:
    1. check_return: Calling "pthread_mutex_lock" without checking return value (as is done elsewhere 0 out of 1 times).

coverity021 <Low> :testcasesupport/std_thread.c:196: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/std_thread.c:196:
    1. check_return: Calling "pthread_mutex_unlock" without checking return value (as is done elsewhere 0 out of 1 times).

coverity022 <Low> :testcasesupport/std_thread.c:205: CHECKED_RETURN
    /opt/project/baseline_testcase/testcasesupport/std_thread.c:205:
    1. check_return: Calling "pthread_mutex_destroy" without checking return value (as is done elsewhere 0 out of 1 times).

