codeql001 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_01.c:40: cpp/constant-comparison
    Comparison is always true because i >= 0.
    When a comparison operation, such as x < y, always returns the same result, it means that the comparison is redundant and may mask a bug because a different check was intended.

codeql002 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_01.c:19: cpp/constant-comparison
    Comparison is always true because i >= 0.
    When a comparison operation, such as x < y, always returns the same result, it means that the comparison is redundant and may mask a bug because a different check was intended.

codeql003 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_01.c:30: cpp/constant-comparison
    Comparison is always true because i >= 0.
    When a comparison operation, such as x < y, always returns the same result, it means that the comparison is redundant and may mask a bug because a different check was intended.

codeql004 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_01.c:15: cpp/constant-comparison
    Comparison is always true because i >= 0.
    When a comparison operation, such as x < y, always returns the same result, it means that the comparison is redundant and may mask a bug because a different check was intended.

codeql005 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_01.c:30: cpp/constant-comparison
    Comparison is always true because i >= 0.
    When a comparison operation, such as x < y, always returns the same result, it means that the comparison is redundant and may mask a bug because a different check was intended.

codeql006 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_01.c:15: cpp/constant-comparison
    Comparison is always true because i >= 0.
    When a comparison operation, such as x < y, always returns the same result, it means that the comparison is redundant and may mask a bug because a different check was intended.

