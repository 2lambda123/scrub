codeql001 <Low> :/opt/project/test/integration_tests/c_testcase/src/main_linux.cpp:11: cpp/power-of-10/assertion-density
    Function main has 27 logical lines, but only 0 assertion(s) -- minimum is 2 (for functions over 20 logical lines).
    Each function over 20 logical lines should have at least two assertions.

codeql002 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.h:5: cpp/power-of-10/hidden-pointer-indirection
    The typedef stdThreadLock hides pointer indirection.
    Pointer indirection may not be hidden by typedefs -- "typedef int* IntPtr;" is not allowed.

codeql003 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.h:4: cpp/power-of-10/hidden-pointer-indirection
    The typedef stdThread hides pointer indirection.
    Pointer indirection may not be hidden by typedefs -- "typedef int* IntPtr;" is not allowed.

codeql004 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.h:11: cpp/power-of-10/hidden-pointer-indirection
    The typedef stdThreadRoutine hides pointer indirection.
    Pointer indirection may not be hidden by typedefs -- "typedef int* IntPtr;" is not allowed.

codeql005 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:207: cpp/power-of-10/pointer-nesting
    The variable globalArgv uses 2 levels of pointer indirection.
    No more than one level of pointer nesting/dereferencing should be used.

codeql006 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:133: cpp/power-of-10/pointer-nesting
    The variable lock uses 2 levels of pointer indirection.
    No more than one level of pointer nesting/dereferencing should be used.

codeql007 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:48: cpp/power-of-10/pointer-nesting
    The variable thread uses 2 levels of pointer indirection.
    No more than one level of pointer nesting/dereferencing should be used.

codeql008 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:35: cpp/power-of-10/function-pointer
    Calls through function pointers are not permitted.
    Function pointers are not permitted -- they make it impossible for a tool to prove the absence of recursion.

codeql009 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_true_01.c:36: cpp/power-of-10/exit-permanent-loop
    [This permanent loop](1) should not be exited.
    Permanent loops (like "while(1) {..}") are typically meant to be non-terminating and should not be terminated by other means.

codeql010 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_true_01.c:35: cpp/power-of-10/exit-permanent-loop
    [This permanent loop](1) should not be exited.
    Permanent loops (like "while(1) {..}") are typically meant to be non-terminating and should not be terminated by other means.

codeql011 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_01.c:31: cpp/power-of-10/bounded-loop-iterations
    The loop counter i is not always decremented in the loop body.
    All loops should have a fixed upper bound; the counter should also be incremented along all paths within the loop. This check excludes loops that are meant to be nonterminating (like schedulers).

codeql012 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_01.c:15: cpp/power-of-10/bounded-loop-iterations
    The loop counter i is not always decremented in the loop body.
    All loops should have a fixed upper bound; the counter should also be incremented along all paths within the loop. This check excludes loops that are meant to be nonterminating (like schedulers).

codeql013 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_01.c:46: cpp/power-of-10/bounded-loop-iterations
    The loop counter i is not always incremented in the loop body.
    All loops should have a fixed upper bound; the counter should also be incremented along all paths within the loop. This check excludes loops that are meant to be nonterminating (like schedulers).

codeql014 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_01.c:30: cpp/power-of-10/bounded-loop-iterations
    The loop counter i is not always decremented in the loop body.
    All loops should have a fixed upper bound; the counter should also be incremented along all paths within the loop. This check excludes loops that are meant to be nonterminating (like schedulers).

codeql015 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_01.c:15: cpp/power-of-10/bounded-loop-iterations
    The loop counter i is not always decremented in the loop body.
    All loops should have a fixed upper bound; the counter should also be incremented along all paths within the loop. This check excludes loops that are meant to be nonterminating (like schedulers).

codeql016 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_empty_01.c:31: cpp/power-of-10/bounded-loop-iterations
    This loop does not have a fixed bound.
    All loops should have a fixed upper bound; the counter should also be incremented along all paths within the loop. This check excludes loops that are meant to be nonterminating (like schedulers).

codeql017 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_empty_01.c:15: cpp/power-of-10/bounded-loop-iterations
    This loop does not have a fixed bound.
    All loops should have a fixed upper bound; the counter should also be incremented along all paths within the loop. This check excludes loops that are meant to be nonterminating (like schedulers).

codeql018 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_01.c:30: cpp/power-of-10/bounded-loop-iterations
    The loop counter i is not always decremented in the loop body.
    All loops should have a fixed upper bound; the counter should also be incremented along all paths within the loop. This check excludes loops that are meant to be nonterminating (like schedulers).

codeql019 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_01.c:15: cpp/power-of-10/bounded-loop-iterations
    The loop counter i is not always decremented in the loop body.
    All loops should have a fixed upper bound; the counter should also be incremented along all paths within the loop. This check excludes loops that are meant to be nonterminating (like schedulers).

codeql020 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_01.c:8: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql021 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_01.c:25: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql022 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_01.c:56: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql023 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_01.c:63: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql024 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_01.c:69: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql025 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_true_01.c:8: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql026 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_true_01.c:25: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql027 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_true_01.c:56: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql028 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_true_01.c:63: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql029 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__do_true_01.c:69: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql030 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_01.c:8: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql031 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_01.c:24: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql032 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_01.c:66: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql033 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_01.c:73: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql034 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_01.c:79: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql035 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_empty_01.c:8: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql036 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_empty_01.c:25: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql037 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_empty_01.c:56: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql038 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_empty_01.c:63: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql039 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__for_empty_01.c:69: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql040 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_01.c:8: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql041 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_01.c:24: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql042 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_01.c:55: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql043 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_01.c:62: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql044 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_01.c:68: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql045 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_true_01.c:8: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql046 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_true_01.c:24: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql047 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_true_01.c:55: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql048 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_true_01.c:62: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql049 <Low> :/opt/project/test/integration_tests/c_testcase/src/CWE835_Infinite_Loop__while_true_01.c:68: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql050 <Low> :/opt/project/test/integration_tests/c_testcase/src/main_linux.cpp:20: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql051 <Low> :/opt/project/test/integration_tests/c_testcase/src/main_linux.cpp:48: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql052 <Low> :/opt/project/test/integration_tests/c_testcase/src/main_linux.cpp:58: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql053 <Low> :/opt/project/test/integration_tests/c_testcase/src/main_linux.cpp:86: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql054 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:7: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql055 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:202: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql056 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:209: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql057 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:1: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql058 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:6: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql059 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:14: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql060 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:23: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql061 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:27: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql062 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:37: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql063 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:50: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql064 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:67: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql065 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:93: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql066 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:108: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql067 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:117: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql068 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:122: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql069 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:129: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql070 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:142: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql071 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:178: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql072 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:193: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql073 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:202: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql074 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:210: cpp/power-of-10/avoid-conditional-compilation
    Use of conditional compilation must be kept to a minimum.
    The use of conditional compilation directives must be kept to a minimum -- e.g. for header guards only.

codeql075 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:139: cpp/power-of-10/dynamic-alloc-after-init
    Dynamic memory allocation is only allowed during initialization.
    Dynamic memory allocation (using malloc() or calloc()) should be confined to the initialization routines of a program.

codeql076 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:59: cpp/power-of-10/dynamic-alloc-after-init
    Dynamic memory allocation is only allowed during initialization.
    Dynamic memory allocation (using malloc() or calloc()) should be confined to the initialization routines of a program.

codeql077 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:100: cpp/power-of-10/one-stmt-per-line
    This line contains 2 statements; only one is allowed.
    Putting more than one statement on a single line hinders program understanding.

codeql078 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:138: cpp/power-of-10/check-return-values
    The return value of non-void function [swscanf](1) is not checked.
The return value of non-void function [swscanf](2) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql079 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:116: cpp/power-of-10/check-return-values
    The return value of non-void function [sscanf](1) is not checked.
The return value of non-void function [sscanf](2) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql080 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:97: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql081 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:99: cpp/power-of-10/check-return-values
    The return value of non-void function [puts](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql082 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:89: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql083 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:84: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql084 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:79: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql085 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:74: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql086 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:69: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql087 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:59: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql088 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:54: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql089 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:49: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql090 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:44: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql091 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:39: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql092 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:34: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql093 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:29: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql094 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:23: cpp/power-of-10/check-return-values
    The return value of non-void function [wprintf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql095 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:15: cpp/power-of-10/check-return-values
    The return value of non-void function [printf](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql096 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:205: cpp/power-of-10/check-return-values
    The return value of non-void function [pthread_mutex_destroy](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql097 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:196: cpp/power-of-10/check-return-values
    The return value of non-void function [pthread_mutex_unlock](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql098 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:184: cpp/power-of-10/check-return-values
    The return value of non-void function [pthread_mutex_lock](1) is not checked.
    The return value of each non-void function call should be checked for error conditions.

codeql099 <Low> :/opt/project/test/integration_tests/c_testcase/src/main_linux.cpp:17: cpp/power-of-10/check-arguments
    This use of parameter argc has not been checked.
    Functions should check their arguments before their first use.

codeql100 <Low> :/opt/project/test/integration_tests/c_testcase/src/main_linux.cpp:18: cpp/power-of-10/check-arguments
    This use of parameter argv has not been checked.
    Functions should check their arguments before their first use.

codeql101 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:139: cpp/power-of-10/check-arguments
    This use of parameter bytes has not been checked.
    Functions should check their arguments before their first use.

codeql102 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:117: cpp/power-of-10/check-arguments
    This use of parameter bytes has not been checked.
    Functions should check their arguments before their first use.

codeql103 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:97: cpp/power-of-10/check-arguments
    This use of parameter bytes has not been checked.
    Functions should check their arguments before their first use.

codeql104 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:89: cpp/power-of-10/check-arguments
    This use of parameter structTwoIntsStruct has not been checked.
    Functions should check their arguments before their first use.

codeql105 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:84: cpp/power-of-10/check-arguments
    This use of parameter doubleNumber has not been checked.
    Functions should check their arguments before their first use.

codeql106 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:79: cpp/power-of-10/check-arguments
    This use of parameter unsignedCharacter has not been checked.
    Functions should check their arguments before their first use.

codeql107 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:74: cpp/power-of-10/check-arguments
    This use of parameter unsignedNumber has not been checked.
    Functions should check their arguments before their first use.

codeql108 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:67: cpp/power-of-10/check-arguments
    This use of parameter wideChar has not been checked.
    Functions should check their arguments before their first use.

codeql109 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:59: cpp/power-of-10/check-arguments
    This use of parameter charHex has not been checked.
    Functions should check their arguments before their first use.

codeql110 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:54: cpp/power-of-10/check-arguments
    This use of parameter sizeTNumber has not been checked.
    Functions should check their arguments before their first use.

codeql111 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:49: cpp/power-of-10/check-arguments
    This use of parameter longLongIntNumber has not been checked.
    Functions should check their arguments before their first use.

codeql112 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:44: cpp/power-of-10/check-arguments
    This use of parameter longNumber has not been checked.
    Functions should check their arguments before their first use.

codeql113 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:39: cpp/power-of-10/check-arguments
    This use of parameter floatNumber has not been checked.
    Functions should check their arguments before their first use.

codeql114 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:34: cpp/power-of-10/check-arguments
    This use of parameter shortNumber has not been checked.
    Functions should check their arguments before their first use.

codeql115 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/io.c:29: cpp/power-of-10/check-arguments
    This use of parameter intNumber has not been checked.
    Functions should check their arguments before their first use.

codeql116 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:205: cpp/power-of-10/check-arguments
    This use of parameter lock has not been checked.
    Functions should check their arguments before their first use.

codeql117 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:196: cpp/power-of-10/check-arguments
    This use of parameter lock has not been checked.
    Functions should check their arguments before their first use.

codeql118 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:184: cpp/power-of-10/check-arguments
    This use of parameter lock has not been checked.
    Functions should check their arguments before their first use.

codeql119 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:137: cpp/power-of-10/check-arguments
    This use of parameter lock has not been checked.
    Functions should check their arguments before their first use.

codeql120 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:112: cpp/power-of-10/check-arguments
    This use of parameter thread has not been checked.
    Functions should check their arguments before their first use.

codeql121 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:57: cpp/power-of-10/check-arguments
    This use of parameter thread has not been checked.
    Functions should check their arguments before their first use.

codeql122 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:64: cpp/power-of-10/check-arguments
    This use of parameter start has not been checked.
    Functions should check their arguments before their first use.

codeql123 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:65: cpp/power-of-10/check-arguments
    This use of parameter args has not been checked.
    Functions should check their arguments before their first use.

codeql124 <Low> :/opt/project/test/integration_tests/c_testcase/testcasesupport/std_thread.c:33: cpp/power-of-10/check-arguments
    This use of parameter args has not been checked.
    Functions should check their arguments before their first use.

