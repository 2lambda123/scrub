codeql001 <Low> :src/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__do_01.java:43: java/missing-override-annotation
    This method overrides [AbstractTestCase.good](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql002 <Low> :src/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__do_01.java:13: java/missing-override-annotation
    This method overrides [AbstractTestCase.bad](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql003 <Low> :src/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__do_true_01.java:42: java/missing-override-annotation
    This method overrides [AbstractTestCase.good](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql004 <Low> :src/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__do_true_01.java:13: java/missing-override-annotation
    This method overrides [AbstractTestCase.bad](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql005 <Low> :src/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__for_01.java:43: java/missing-override-annotation
    This method overrides [AbstractTestCase.good](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql006 <Low> :src/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__for_01.java:12: java/missing-override-annotation
    This method overrides [AbstractTestCase.bad](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql007 <Low> :src/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__for_empty_01.java:41: java/missing-override-annotation
    This method overrides [AbstractTestCase.good](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql008 <Low> :src/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__for_empty_01.java:12: java/missing-override-annotation
    This method overrides [AbstractTestCase.bad](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql009 <Low> :src/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__while_01.java:41: java/missing-override-annotation
    This method overrides [AbstractTestCase.good](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql010 <Low> :src/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__while_01.java:12: java/missing-override-annotation
    This method overrides [AbstractTestCase.bad](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql011 <Low> :src/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__while_true_01.java:42: java/missing-override-annotation
    This method overrides [AbstractTestCase.good](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql012 <Low> :src/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__while_true_01.java:13: java/missing-override-annotation
    This method overrides [AbstractTestCase.bad](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql013 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:15: java/missing-override-annotation
    This method overrides [HttpServlet.doGet](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql014 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:11: java/missing-override-annotation
    This method overrides [HttpServlet.doPost](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql015 <Low> :src/testcasesupport/AbstractTestCase.java:16: java/missing-override-annotation
    This method overrides [AbstractTestCaseBase.runTest](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql016 <Low> :src/testcasesupport/AbstractTestCaseBadOnly.java:12: java/missing-override-annotation
    This method overrides [AbstractTestCaseBase.runTest](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql017 <Low> :src/testcasesupport/AbstractTestCaseClassIssue.java:16: java/missing-override-annotation
    This method overrides [AbstractTestCaseBase.runTest](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql018 <Low> :src/testcasesupport/AbstractTestCaseClassIssueBad.java:14: java/missing-override-annotation
    This method overrides [AbstractTestCaseBase.runTest](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql019 <Low> :src/testcasesupport/AbstractTestCaseClassIssueGood.java:14: java/missing-override-annotation
    This method overrides [AbstractTestCaseBase.runTest](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql020 <Low> :src/testcasesupport/AbstractTestCaseServlet.java:35: java/missing-override-annotation
    This method overrides [AbstractTestCaseServletBase.runTest](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql021 <Low> :src/testcasesupport/AbstractTestCaseServletBadOnly.java:32: java/missing-override-annotation
    This method overrides [AbstractTestCaseServletBase.runTest](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql022 <Low> :src/testcasesupport/AbstractTestCaseServletBase.java:68: java/missing-override-annotation
    This method overrides [HttpServlet.doGet](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql023 <Low> :src/testcasesupport/AbstractTestCaseServletBase.java:63: java/missing-override-annotation
    This method overrides [HttpServlet.doPost](1); it is advisable to add an Override annotation.
    A method that overrides a method in a superclass but does not have an 'Override' annotation cannot take advantage of compiler checks, and makes code less readable.

codeql024 <Low> :src/testcases/CWE835_Infinite_Loop/CWE835_Infinite_Loop__do_01.java:16: java/local-variable-is-never-read
    Variable 'int j' is never read.
    A local variable that is never read is redundant.

codeql025 <Low> :src/testcasesupport/AbstractTestCaseBase.java:18: java/unused-parameter
    The parameter args is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql026 <Low> :src/testcasesupport/AbstractTestCaseServletBase.java:31: java/unused-parameter
    The parameter args is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql027 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:236: java/unused-parameter
    The parameter request is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql028 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:236: java/unused-parameter
    The parameter response is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql029 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:210: java/unused-parameter
    The parameter request is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql030 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:210: java/unused-parameter
    The parameter response is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql031 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:184: java/unused-parameter
    The parameter request is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql032 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:184: java/unused-parameter
    The parameter response is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql033 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:158: java/unused-parameter
    The parameter request is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql034 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:158: java/unused-parameter
    The parameter response is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql035 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:131: java/unused-parameter
    The parameter request is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql036 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:131: java/unused-parameter
    The parameter response is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql037 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:105: java/unused-parameter
    The parameter request is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql038 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:105: java/unused-parameter
    The parameter response is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql039 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:79: java/unused-parameter
    The parameter request is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql040 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:79: java/unused-parameter
    The parameter response is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql041 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:53: java/unused-parameter
    The parameter request is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql042 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:53: java/unused-parameter
    The parameter response is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql043 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:27: java/unused-parameter
    The parameter request is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql044 <Low> :src/testcases/CWE835_Infinite_Loop/ServletMain.java:27: java/unused-parameter
    The parameter response is unused.
    Parameters that are not used add unnecessary complexity to an interface.

codeql045 <Low> :src/testcasesupport/AbstractTestCaseServlet.java:56: java/stack-trace-exposure
    [Error information](1) can be exposed to an external user.
    Information from a stack trace propagates to an external user. Stack traces can unintentionally reveal implementation details that are useful to an attacker for developing a subsequent exploit.

codeql046 <Low> :src/testcasesupport/AbstractTestCaseServlet.java:78: java/stack-trace-exposure
    [Error information](1) can be exposed to an external user.
    Information from a stack trace propagates to an external user. Stack traces can unintentionally reveal implementation details that are useful to an attacker for developing a subsequent exploit.

codeql047 <Low> :src/testcasesupport/AbstractTestCaseServletBadOnly.java:53: java/stack-trace-exposure
    [Error information](1) can be exposed to an external user.
    Information from a stack trace propagates to an external user. Stack traces can unintentionally reveal implementation details that are useful to an attacker for developing a subsequent exploit.

codeql048 <Low> :src/testcasesupport/IO.java:100: java/random-used-once
    Random object created and used only once.
    Creating an instance of 'Random' for each pseudo-random number required does not guarantee an evenly distributed sequence of random numbers.

